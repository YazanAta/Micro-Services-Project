package com.microservices.serviceone.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GovernorateAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGovernorateAllPropertiesEquals(Governorate expected, Governorate actual) {
        assertGovernorateAutoGeneratedPropertiesEquals(expected, actual);
        assertGovernorateAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGovernorateAllUpdatablePropertiesEquals(Governorate expected, Governorate actual) {
        assertGovernorateUpdatableFieldsEquals(expected, actual);
        assertGovernorateUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGovernorateAutoGeneratedPropertiesEquals(Governorate expected, Governorate actual) {
        assertThat(expected)
            .as("Verify Governorate auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGovernorateUpdatableFieldsEquals(Governorate expected, Governorate actual) {
        assertThat(expected)
            .as("Verify Governorate relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getArea()).as("check area").isEqualTo(actual.getArea()))
            .satisfies(e -> assertThat(e.getPopulation()).as("check population").isEqualTo(actual.getPopulation()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGovernorateUpdatableRelationshipsEquals(Governorate expected, Governorate actual) {
        // empty method
    }
}
